name: Format, check, and test Python SDK

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize]
    branches: [ main ]
  workflow_call:

jobs:
  test-python-sdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the project
      run: uv sync --locked --all-extras --dev
        
    - name: Lint with flake8
      run: |
        uv run flake8 src tests examples
        
    - name: Type check with mypy
      run: |
        uv run mypy src tests examples
        
    - name: Test with pytest
      run: |
        uv run pytest tests/ --cov=realitydefender --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: python
        name: python-sdk-codecov
        fail_ci_if_error: true 
